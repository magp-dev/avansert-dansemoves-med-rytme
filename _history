{"entries":[{"timestamp":1741137652748,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" id=\")t|jShD@cE]l;AJ;v7zO\" x=\"20\" y=\"20"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start"],[0,"\"></"]],"start1":12,"start2":12,"length1":135,"length2":62},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," id=\"R_Amg2R2b5a~-0uQB}Qq\" x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":49,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"// Include the BitBot extension in MakeCode\nbitbot.select_model(BBModel.PRO);\n\n// Function to analyze sound intensity and determine dance speed\nfunction getBeatStrength(): number {\n    let soundLevel = input.soundLevel();\n    return Math.map(soundLevel, 0, 255, 300, 700); // Adjust movement timing based on beat strength\n}\n\n// Function to make the robot dance with varied moves while staying in place\nfunction dance() {\n    let beatTime = getBeatStrength();\n\n    // Intense side swing\n    bitbot.motor(BBMotor.Left, 60);\n    bitbot.motor(BBMotor.Right, 30);\n    bitbot.bbSetServo(BBServos.P1, 45);\n    bitbot.bbSetServo(BBServos.P2, 135);\n    bitbot.ledRainbow(true, BBArms.Both);\n    basic.pause(beatTime);\n\n    // Reverse swing\n    bitbot.motor(BBMotor.Left, 30);\n    bitbot.motor(BBMotor.Right, 60);\n    bitbot.bbSetServo(BBServos.P1, 135);\n    bitbot.bbSetServo(BBServos.P2, 45);\n    bitbot.ledShow();\n    basic.pause(beatTime);\n\n    // Quick spin and reverse to avoid displacement\n    bitbot.motor(BBMotor.Left, -50);\n    bitbot.motor(BBMotor.Right, 50);\n    bitbot.ledRotate(true, BBArms.Both);\n    basic.pause(beatTime / 2);\n\n    bitbot.motor(BBMotor.Left, 50);\n    bitbot.motor(BBMotor.Right, -50);\n    basic.pause(beatTime / 2);\n\n    // Move back to center\n    bitbot.motor(BBMotor.Left, -30);\n    bitbot.motor(BBMotor.Right, -30);\n    bitbot.ledClear();\n    basic.pause(beatTime);\n    bitbot.stop(BBStopMode.Coast);\n}\n\n// Listen for varying sound levels and adjust dance\nbasic.forever(function () {\n    if (input.soundLevel() > 128) { // Detect strong beats\n        dance();\n    }\n});\n\n// Indicate ready status\nbasic.showIcon(IconNames.EighthNote);"],[0,"\n"]],"start1":0,"start2":0,"length1":1660,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"BitBot\": \"github:4tronix/bitbot#v2.1.13\""],[0,"\n"],[1,""],[0,"    "]],"start1":156,"start2":156,"length1":60,"length2":9},{"diffs":[[0,"   \""],[-1,"testFiles\": [\n        \"test.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":253,"start2":253,"length1":76,"length2":31}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1741137652747,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"avansert-dansemoves-med-rytme\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1741138054922}